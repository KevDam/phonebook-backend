{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObj","post","update","id","put","deletePerson","delete","Person","person","handleDeletePerson","name","number","onClick","window","confirm","PersonList","persons","filter","map","filteredPersons","toLowerCase","includes","Filter","value","onChange","Notification","message","className","App","useState","setPersons","newName","setNewName","newNum","setNewNum","newFilter","setNewFilter","newError","setnewError","useEffect","then","response","console","log","data","e","target","type","preventDefault","find","selectedPerson","updatedPerson","updatedPersons","p","personObj","concat","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87bbaed9.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (newObj) => {\n    return axios.post(baseUrl, newObj)\n}\n\nconst update = (id, newObj) => {\n    return axios.put(`${baseUrl}/${id}`, newObj)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst personService = {\n    getAll,\n    create,\n    update,\n    deletePerson\n}\n\nexport default personService;\n","import './App.css'\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/persons.js'\n\nconst Person = ({person, handleDeletePerson}) => {\n  return (\n    <div>\n      {person.name}: {person.number} <button onClick={\n        () => {\n          if(window.confirm(`Are you sure you want to delete ${person.name}?`)){\n            handleDeletePerson(person.id)\n          }\n        }\n      }>Delete</button>\n    </div>\n  )\n}\n\nconst PersonList = ({persons, filter, handleDeletePerson}) => {\n  if (filter === '') {\n    return (\n      <div>\n        {persons.map(person => <Person key={person.name} person={person} handleDeletePerson={handleDeletePerson} />)}\n      </div>\n    )\n  } else {\n    let filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    return (\n      <div>\n        {filteredPersons.map(person => <Person key={person.name} person={person} handleDeletePerson={handleDeletePerson}/>)}\n      </div>\n    )\n  }\n}\n\n\nconst Filter = ({value, onChange}) => {\n  return (\n    <div>\n        <h2>Filter by Name</h2>\n        <div>\n          Search: <input value={value} onChange={onChange} />\n        </div>\n      </div>\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message === '' || message === null) {\n    return null\n  } else {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newError, setnewError ] = useState('')\n\n  const personsHook = () => {\n    personService.getAll().then(response => {\n      console.log('Persons Promise Fulfilled')\n      setPersons(response.data)\n    })\n  }\n\n  useEffect(personsHook, [])\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumChange = (e) => {\n    setNewNum(e.target.value)\n  }\n\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value)\n  }\n\n  const handleDeletePerson = (id) => {\n    personService.deletePerson(id)\n      .then(response => {\n        let newPersons = persons.filter(p => p.id !== id)\n        setPersons(newPersons)\n      })\n\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault()\n\n    if (persons.find(person => (person.name === newName && person.number === newNum))) {\n      setnewError(`${newName} is already added to the phonebook`)\n    } else if (persons.find(person => person.name === newName)) {\n      let selectedPerson = persons.find(person => person.name === newName)\n\n      if (window.confirm(`${selectedPerson.name} is already added to the phonebook, replace the old number with a new one?`)) {\n        const updatedPerson = {\n          name: newName,\n          number: newNum,\n          id: selectedPerson.id\n        }\n\n        let updatedPersons = persons.map(p => p.id === updatedPerson.id ? updatedPerson : p)\n        setPersons(updatedPersons)\n        setNewName('')\n        setNewNum('')\n\n        personService\n          .update(updatedPerson.id, updatedPerson)\n          .then(response => {\n            console.log(response)\n          })\n      }\n    } else {\n      const personObj = {\n        name: newName,\n        number: newNum\n      }\n\n      setPersons(persons.concat(personObj))\n      setNewName('')\n      setNewNum('')\n\n      personService\n        .create(personObj)\n        .then(response => {\n          console.log(response)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={newError} />\n      <h2>Add New Entry</h2>\n      <form>\n        <div>\n          Name: <input value={newName} onChange={handleNameChange} />\n          <br></br>\n          Number: <input value={newNum} onChange={handleNumChange} />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={addPerson}>add</button>\n        </div>\n      </form>\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h2>Numbers</h2>\n      <PersonList persons={persons} filter={newFilter} handleDeletePerson={handleDeletePerson}/>âˆ‚\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}